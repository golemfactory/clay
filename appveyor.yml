os: Visual Studio 2017
version: '{branch}-{build}'

branches:
  only:
  - master
  - develop

platform:
  - x64

environment:
  GEVENT_LOOP: tulipcore.Loop
  matrix:
    - PYTHON: "C:\\Python35-x64"
      PYTHON_VERSION: "3.5.0"
      PYTHON_ARCH: "64"

      VER_GETH: geth-windows-amd64-1.6.7-ab5646c5
      VER_IPFS: go-ipfs_v0.4.4_windows-386
      VER_HYPERG: 0.2.1

      DIR_OPENSSL: C:\OpenSSL
      DIR_GETH: C:\%VER_GETH%
      DIR_IPFS: C:\go-ipfs
      DIR_HYPERG: C:\hyperg
      DIR_WHEELS: C:\wheels

      PYWIN32: pywin32-221.win-amd64-py3.5.exe

      WHEELS_URL: https://raw.githubusercontent.com/wiki/golemfactory/golem/wheels
      BINARIES_URL: https://raw.githubusercontent.com/wiki/golemfactory/golem/binaries

cache:
  - '%DIR_OPENSSL%            -> appveyor.yml'
  - '%DIR_IPFS%               -> appveyor.yml'
  - '%DIR_GETH%               -> appveyor.yml'
  - '%DIR_HYPERG%             -> appveyor.yml'
  - '%DIR_WHEELS%             -> requirements.txt'
  - '%LOCALAPPDATA%\pip\Cache -> requirements.txt'

install:
  - set PATH=%PYTHON%;%PYTHON%\Scripts;%PYTHON%\Lib\site-packages\PyQt5;C:\OpenSSL-Win64;%DIR_GETH%;%DIR_IPFS%;%DIR_HYPERG%;%SystemRoot%\system32;%PATH%

  # geth
  - if not exist %DIR_GETH% (
      appveyor DownloadFile https://gethstore.blob.core.windows.net/builds/%VER_GETH%.zip &&
      7z x %VER_GETH%.zip -y -aoa -oC:\ > NUL
    )

  # golem-hyperdrive
  - if not exist %DIR_HYPERG% (
      curl -LfSs -o hyperg.zip https://github.com/mfranciszkiewicz/golem-hyperdrive/releases/download/v%VER_HYPERG%/hyperg_%VER_HYPERG%_windows-x64.zip &&
      7z x hyperg.zip -y -aoa -oC:\ > NUL
    )

  - ps: $HyperdriveProcess = Start-Process hyperg -PassThru

  # ipfs
  - if not exist %DIR_IPFS% (
      appveyor DownloadFile https://dist.ipfs.io/go-ipfs/v0.4.4/%VER_IPFS%.zip &&
      7z x %VER_IPFS%.zip -y -aoa -oC:\ > NUL
    )

  - ipfs init
  - ps: $IPFSProcess = Start-Process ipfs daemon -PassThru

  # pip
  - pip install --disable-pip-version-check --user --upgrade pip

  # virtualenv
  - pip install virtualenv
  - virtualenv --version

  - virtualenv --clear venv
  - venv\Scripts\activate.bat

  # pywin32
  - if not exist %DIR_WHEELS% (
      mkdir %DIR_WHEELS%
    )
  - if not exist %DIR_WHEELS%\%PYWIN32% (
      appveyor DownloadFile %WHEELS_URL%/%PYWIN32% &&
      move %PYWIN32% %DIR_WHEELS%\%PYWIN32%
    )
  - easy_install.exe %DIR_WHEELS%\%PYWIN32%

  # requirements
  - pip install git+git://github.com/decentfox/tulipcore.git
  - pip install six pytest mock coverage pytest-cov codecov
  - pip install -r requirements.txt
  - pip install -r requirements-win.txt
  - python setup.py develop

build_script:
  - msbuild apps\rendering\resources\taskcollector\taskcollector.sln /p:Configuration=Release /p:Platform=x64 /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"

test_script:
  - venv\Scripts\activate.bat
  - pytest --cov=golem

after_test:
  - venv\Scripts\activate.bat
  - codecov

on_finish:
  - ps: Stop-Process -Id $IPFSProcess.Id
  - ps: Stop-Process -Id $HyperdriveProcess.Id
